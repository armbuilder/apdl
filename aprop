!arg1= APTN,AOVLAP,AGLUE
!arg2= aglue,nummrg
clean_up
asum
/nopr
/nerr,1
/UIS,msgpop,3
complist=
*get,n_comp,comp,,ncomp
*dim,complist,string,248,n_comp,3

*do,ii,1,n_comp,1
    *get,ar10,comp,ii,name
    *get,ar11,comp,ar10,type
    complist(1,ii,1)=ar10
    complist(1,ii,2)=chrval(ar11)
*enddo
cm_areachklst=
areacheck=
arealist=
*vget,arealist,area,,alist
*get,adim1,parm,arealist,dim,1
*dim,areacheck,array,adim1,2
*do,ii,1,adim1,1
    areacheck(ii,1)=arealist(ii)
*enddo

!check for active componentts

*do,ii,1,n_comp,
    *if,valchr(complist(1,ii,2)),eq,8,then
        cmsel,s,complist(1,ii,1)
        arealist=
        cm_areachklst=
        *vget,arealist,area,,alist
        *get,adim2,parm,arealist,dim,1
        *dim,cm_areachklst,array,adim2,2
        *do,jj,1,adim2,
            *do,kk,1,adim1,
                *if,areacheck(kk,1),eq,arealist(jj),then
                    cm_areachklst(jj,1)=1
                    !*vwrite,'comp %ii% subarea %jj% area %kk% found'
                    !%s
                    
                *endif
            *enddo
        *enddo
        *vscfun,summe,sum,cm_areachklst
        !*vwrite,summe
        !%i
        *if,summe,eq,adim2,then
            !*vwrite,'comp found'
            !%s
            complist(1,ii,3)='1'
            *dim,al_%complist(1,ii,1)%,array,adim2,3,3
            *do,xx,1,adim2,
                al_%complist(1,ii,1)%(xx)=arealist(xx)
            *enddo
        *else,
            !*vwrite,'cnf adim %adim2% and sum %summe%'
            !%s
            complist(1,ii,3)='0'
        *endif
    *endif
*enddo

ar20=0
*cfopen,'clean_up.mac'
*do,ii,1,n_comp
    *if,valchr(complist(1,ii,3)),eq,1,then
        ar20=ar20+1
        arname='al_%complist(1,ii,1)%'
        *vwrite,arname
        *del,%s
    *endif
*enddo
*cfclos

activcomp=
*if,ar20,lt,n_comp,then
    *dim,activcomp,array,ar20
    ar30=1
    *do,jj,1,n_comp,1
        *if,valchr(complist(1,jj,3)),eq,1,then
            activcomp(ar30)=jj
            ar30=ar30+1
        *endif
    *enddo
*else,
    activcomp='all'
*endif

*do,ii,1,n_comp
    *get,counter,parm,al_%complist(1,ii,1)%,dim,1
    *do,jj,1,counter
        
        *get,tarea,area,al_%complist(1,ii,1)%(jj,1,1),area
        al_%complist(1,ii,1)%(jj,1,2)=tarea
        asel,s,,,al_%complist(1,ii,1)%(jj,1,1)
        asum
        *get,acent,area,,cent,x
        al_%complist(1,ii,1)%(jj,1,3)=acent
        lslk,s,1
        ksll,s,1
        kplist=
        kploc=
        *vget,kplist,kp,,klist
        *get,klcount,parm,kplist,dim,1
        *dim,kploc,array,3,2,klcount
        cloc=0
        
        *do,kk,1,klcount,
            kploc(1,2,kk)=kplist(kk)
            *get,kploc(1,1,kk),kp,kplist(kk),loc,x
            *get,kploc(2,1,kk),kp,kplist(kk),loc,y
            *get,kploc(3,1,kk),kp,kplist(kk),loc,z
        *enddo
        *do,kk,1,klcount-1,
            *if,kploc(1,1,kk),eq,kploc(1,1,kk+1),then
               ! *vwrite,'constant x loc'
                !%s 
                cloc=1
            *elseif,kploc(2,1,kk),eq,kploc(2,1,kk+1),then
                !*vwrite,'constant y loc'
                !%s
                cloc=2
            *elseif,kploc(3,1,kk),eq,kploc(3,1,kk+1),then
                !*vwrite,'constant z loc'
                !%s
                cloc=3
            *endif
        *enddo
        
    *enddo
*enddo         
      

cmsel,none
*do,ii,1,n_comp,1
    *if,valchr(complist(1,ii,3)),eq,1,then
        cmsel,a,complist(1,ii,1)
    *endif
*enddo




146

​

147

​

148

​146

​

147

​

148

​146

​

147

​

148

​146

​

147

​

148

​146

​

147

​

148

​146

​

147

​

148

​
